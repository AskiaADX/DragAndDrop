/* standard.css */
{%
Dim responseColourPrimary =CurrentADC.PropValue("responseColourPrimary")
Dim fontColour =CurrentADC.PropValue("fontColour")
Dim responseShadow =CurrentADC.PropValue("responseShadow")
Dim responseSelectedColourPrimary =CurrentADC.PropValue("responseSelectedColourPrimary")
Dim responseSelectedFontColour =CurrentADC.PropValue("responseSelectedFontColour")
Dim responseSelectedShadow =CurrentADC.PropValue("responseSelectedShadow")

Dim borderColour =CurrentADC.PropValue("borderColour")
Dim borderThickness =CurrentADC.PropValue("borderThickness")
Dim borderStyle =CurrentADC.PropValue("borderStyle")
Dim responseSelectedBorderColour =CurrentADC.PropValue("responseSelectedBorderColour")
Dim responseSelectedBorderThickness =CurrentADC.PropValue("responseSelectedBorderThickness")
Dim responseSelectedBorderStyle =CurrentADC.PropValue("responseSelectedBorderStyle")
Dim borderRadius =CurrentADC.PropValue("borderRadius")

Dim responseTextAlign =CurrentADC.PropValue("responseTextAlign")
Dim responseImageAlignment =CurrentADC.PropValue("responseImageAlignment")
Dim responseAlign =CurrentADC.PropValue("responseAlign")
Dim displayResponseText =CurrentADC.PropValue("displayResponseText")
Dim responseTextPosition =CurrentADC.PropValue("responseTextPosition")

Dim responseHoverColourPrimary =CurrentADC.PropValue("responseHoverColourPrimary")
Dim responseHoverFontColour =CurrentADC.PropValue("responseHoverFontColour")
Dim responseHoverBorderColour =CurrentADC.PropValue("responseHoverBorderColour")
Dim responseHoverBorderThickness =CurrentADC.PropValue("responseHoverBorderThickness")
Dim responseHoverBorderStyle =CurrentADC.PropValue("responseHoverBorderStyle")
Dim responseHoverShadow =CurrentADC.PropValue("responseHoverShadow")

Dim showResponseHoverColour =CurrentADC.PropValue("showResponseHoverColour")
Dim showResponseHoverFontColour =CurrentADC.PropValue("showResponseHoverFontColour")
Dim showResponseHoverBorder =CurrentADC.PropValue("showResponseHoverBorder")

Dim responseMargin =CurrentADC.PropValue("responseMargin")
Dim responsePadding =CurrentADC.PropValue("responsePadding")
Dim responseTextPadding =CurrentADC.PropValue("responseTextPadding")
Dim responseImagePadding =CurrentADC.PropValue("responseImagePadding")

Dim responseTextLineHeight =CurrentADC.PropValue("responseTextLineHeight")

Dim fontSize =CurrentADC.PropValue("fontSize")
Dim responseHeight =CurrentADC.PropValue("responseHeight")
Dim responseWidth =CurrentADC.PropValue("responseWidth")

Dim startAreaWidth =CurrentADC.PropValue("startAreaWidth")
Dim startAreaColourPrimary =CurrentADC.PropValue("startAreaColourPrimary")
Dim startAreaBorderColour =CurrentADC.PropValue("startAreaBorderColour")
Dim startAreaBorderThickness =CurrentADC.PropValue("startAreaBorderThickness")
Dim startAreaBorderStyle =CurrentADC.PropValue("startAreaBorderStyle")
Dim startAreaBorderRadius =CurrentADC.PropValue("startAreaBorderRadius")
Dim startAreaShadow =CurrentADC.PropValue("startAreaShadow")

Dim dropAreaPosition =CurrentADC.PropValue("dropAreaPosition")
Dim dropAreaContainerWidth =CurrentADC.PropValue("dropAreaContainerWidth")
Dim dropAreaWidth =CurrentADC.PropValue("dropAreaWidth")
Dim dropAreaHeight =CurrentADC.PropValue("dropAreaHeight")
Dim dropAreaAlign =CurrentADC.PropValue("dropAreaAlign")
Dim dropAreaFontSize =CurrentADC.PropValue("dropAreaFontSize")
Dim dropAreaFontColour =CurrentADC.PropValue("dropAreaFontColour")
Dim dropAreaTextAlign =CurrentADC.PropValue("dropAreaTextAlign")
Dim dropAreaColourPrimary =CurrentADC.PropValue("dropAreaColourPrimary")
Dim dropAreaBorderColour =CurrentADC.PropValue("dropAreaBorderColour")
Dim dropAreaBorderThickness =CurrentADC.PropValue("dropAreaBorderThickness")
Dim dropAreaBorderStyle =CurrentADC.PropValue("dropAreaBorderStyle")
Dim dropAreaBorderRadius =CurrentADC.PropValue("dropAreaBorderRadius")
Dim dropAreaShadow =CurrentADC.PropValue("dropAreaShadow")
Dim dropAreaPadding =CurrentADC.PropValue("dropAreaPadding")
Dim dropAreaMargin =CurrentADC.PropValue("dropAreaMargin")
Dim dropAreaTextPadding =CurrentADC.PropValue("dropAreaTextPadding")
Dim dropContainerMargin =CurrentADC.PropValue("dropContainerMargin")

Dim stackResponses =CurrentADC.PropValue("stackResponses")

Dim controlAlign =CurrentADC.PropValue("controlAlign")

IF responseHeight = "" Then
	responseHeight = "auto"
EndIF
IF responseWidth = "" Then
	responseWidth = "auto"
EndIF
%}

/* General */
#adc_{%= CurrentADC.InstanceId%} 
{ 
	text-align:{%= responseAlign%};
}

/* Reponses */
#adc_{%= CurrentADC.InstanceId%} .responseItem, #adc_{%= CurrentADC.InstanceId%} .responseItemMini
{   
	
	/* Decoration */
	{% IF borderThickness = "none" Then %}
		border: none;
	{% Else %}
		border: {%= borderThickness%} {%= borderStyle%} rgb({%= borderColour%});
	{% EndIF %}	
	background-color: rgb({%= responseColourPrimary%});
	
	/* Effects */
	-webkit-border-radius:	{%= borderRadius%}; 
	-moz-border-radius:		{%= borderRadius%}; 
	-khtml-border-radius:	{%= borderRadius%}; 
	border-radius:			{%= borderRadius%};
	
	-webkit-box-shadow: {%= responseShadow%};
	-moz-box-shadow: {%= responseShadow%};
	box-shadow: {%= responseShadow%};
	
	text-align: center;
		
	height: {%= responseHeight%};
	width: {%= responseWidth%};
	
	padding: {%= responsePadding%};
	{% IF stackResponses = "1" And responseAlign = "center" Then %}
		margin: 0px auto;
		float:none;
	{% Else %}
		margin: {%= responseMargin%};
		float:left;
	{% EndIF %}	
	
	z-index: 100;
}
#adc_{%= CurrentADC.InstanceId%} .responseItemMini {
	margin: {%= responseMargin%};
	float:left;
}
#adc_{%= CurrentADC.InstanceId%} .responseItem:hover, #adc_{%= CurrentADC.InstanceId%} .responseItemMini:hover
{
	
	/* Decoration */
	{% IF showResponseHoverBorder = "1" Then %}
		border: {%= responseHoverBorderThickness%} {%= responseHoverBorderStyle%} rgb({%= responseHoverBorderColour%});
	{% EndIF %}
	{% IF showResponseHoverColour = "1" Then %}
		background-color: rgb({%= responseHoverColourPrimary%});
	{% EndIF %}
	-webkit-box-shadow: {%= responseHoverShadow%};
	-moz-box-shadow: {%= responseHoverShadow%};
	box-shadow: {%= responseHoverShadow%};
}

#adc_{%= CurrentADC.InstanceId%} .responseItem img, #adc_{%= CurrentADC.InstanceId%} .responseItemMini img
{  
	pointer-events:none;
	margin:0px auto;
	vertical-align:middle;
	float:{%= responseImageAlignment%};
	padding:{%= responseImagePadding%};
}

#adc_{%= CurrentADC.InstanceId%} .response_text 
{ 
	pointer-events:none;
	display:{%= displayResponseText%};
	font-size:{%= fontSize%};
	text-align:{%= responseTextAlign%};
	color:rgb({%= fontColour%});
	
	padding:{%= responseTextPadding%};
	line-height:{%= responseTextLineHeight%};
	
	{% IF responseTextPosition = "left" or responseTextPosition = "right" Then %}
		float: {%= responseTextPosition%};
	{% EndIF %}
	
	word-wrap: break-word;
}

#adc_{%= CurrentADC.InstanceId%} .responseItem:hover .response_text, #adc_{%= CurrentADC.InstanceId%} .responseItemMini:hover .response_text 
{ 
	{% IF showResponseHoverFontColour = "1" Then %}
		color:rgb({%= responseHoverFontColour%});
	{% EndIF %}
}

#adc_{%= CurrentADC.InstanceId%} .startArea { 
	width:{%= startAreaWidth%}; 
	{% IF dropAreaPosition = "left" Then %}
		float:right;
	{% ElseIF dropAreaPosition = "right" Then %}
		float:left;
	{% EndIF %}
	
	{% IF controlAlign = "center" Then %}
		margin:0px auto;
	{% EndIF %}
	
	/* Decoration */
	{% IF startAreaBorderThickness = "none" Then %}
		border: none;
	{% Else %}
		border: {%= startAreaBorderThickness%} {%= startAreaBorderStyle%} rgb({%= startAreaBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= startAreaColourPrimary%});
	
	-webkit-box-shadow: {%= startAreaShadow%};
	-moz-box-shadow: {%= startAreaShadow%};
	box-shadow: {%= startAreaShadow%};
	
	/* Effects */
	-webkit-border-radius:	{%= startAreaBorderRadius%}; 
	-moz-border-radius:		{%= startAreaBorderRadius%}; 
	-khtml-border-radius:	{%= startAreaBorderRadius%}; 
	border-radius:			{%= startAreaBorderRadius%};
	
	{% IF stackResponses = "1" And responseAlign = "center" Then %}
		text-align:center;
	{% EndIF %}
	
	display:block; position:relative;
}

#adc_{%= CurrentADC.InstanceId%} .responseActive { 
	/* Decoration */	
	{% IF responseSelectedBorderThickness = "none" Then %}
		border: none;
	{% Else %}
		border: {%= responseSelectedBorderThickness%} {%= responseSelectedBorderStyle%} rgb({%= responseSelectedBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= responseSelectedColourPrimary%});
}

#adc_{%= CurrentADC.InstanceId%} .dropContainer { 
	display:block; 
	width:{%= dropAreaContainerWidth%};
	
	{% IF dropAreaPosition = "left" or dropAreaPosition = "right" Then %}
		float: {%= dropAreaPosition%};
	{% Else %}
		float:none;
	{% EndIF %}
	
	margin: {%= dropContainerMargin%};
	
	{% IF dropAreaAlign = "center" Then %}
		text-align:center;
	{% EndIF %}
	
}

#adc_{%= CurrentADC.InstanceId%} .dropZone { 

	position:relative;
	width:{%= dropAreaWidth%};
	height:{%= dropAreaHeight%};
	
	{% IF dropAreaAlign = "center" Then %}
		text-align:center;
		display:inline-block;
	{% Else %}
		float:{%= dropAreaAlign%};
	{% EndIF %}
	
	/* Decoration */
	{% IF dropAreaBorderThickness = "none" Then %}
		border: none;
	{% Else %}
		border: {%= dropAreaBorderThickness%} {%= dropAreaBorderStyle%} rgb({%= dropAreaBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= dropAreaColourPrimary%});
	
	-webkit-box-shadow: {%= dropAreaShadow%};
	-moz-box-shadow: {%= dropAreaShadow%};
	box-shadow: {%= dropAreaShadow%};
	
	padding:{%= dropAreaPadding%};
	margin:{%= dropAreaMargin%};
	
	/* Effects */
	-webkit-border-radius:	{%= dropAreaBorderRadius%}; 
	-moz-border-radius:		{%= dropAreaBorderRadius%}; 
	-khtml-border-radius:	{%= dropAreaBorderRadius%}; 
	border-radius:			{%= dropAreaBorderRadius%};
}

#adc_{%= CurrentADC.InstanceId%} .drop_text { 
	font-size:{%= dropAreaFontSize%};
	color:rgb({%= dropAreaFontColour%});
	text-align:{%= dropAreaTextAlign%};
	padding:{%= dropAreaTextPadding%};
}